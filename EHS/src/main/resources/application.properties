spring.application.name=EHS
# Server Configuration
server.port=8080

# Trust proxy headers for HTTPS forwarding
server.forward-headers-strategy=framework
server.use-forward-headers=true

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB



# File Storage Location
file.upload-dir=./uploads

# Increase connection timeout for large file uploads and deletion operations
server.connection-timeout=300s
spring.mvc.async.request-timeout=300000
spring.transaction.default-timeout=300

# Database Configuration	
spring.datasource.url=${DB_URL}	
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}
jwt.header=${JWT_HEADER}
jwt.prefix=${JWT_PREFIX} 

# Logging

logging.level.org.springframework.security=TRACE
logging.level.com.ehs.elearning=TRACE

#CORS configuration

spring.mvc.cors.allowed-origin-patterns=http://192.168.*:*,https://192.168.*:*,http://10.*:*,https://10.*:*,http://172.16.*:*,https://172.16.*:*,http://localhost:*,https://localhost:*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.exposed-headers=Content-Security-Policy
csp.enable=true
csp.policy=default-src 'self' https://*.google.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.google.com; style-src 'self' 'unsafe-inline' https://*.google.com; img-src 'self' data: https://*.google.com https://*.googleusercontent.com; media-src 'self' blob: https://*.google.com; object-src 'self' https://*.google.com; frame-src 'self' https://drive.google.com https://accounts.google.com https://*.google.com; frame-ancestors 'self' https://drive.google.com

# Email Configuration
app.email.enabled=true
# IMPORTANT: Update this URL to match your actual frontend deployment URL to avoid 404 errors with password reset links
app.frontend.url=${FRONTEND_URL}

# Gmail SMTP Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.timeout=30000
spring.mail.properties.mail.smtp.writetimeout=30000
spring.mail.properties.mail.smtp.connectiontimeout=30000
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# Google Drive Configuration
google.drive.service-account-key-path=${GOOGLE_DRIVE_SERVICE_ACCOUNT_KEY_PATH}
google.drive.folder-id=${GOOGLE_DRIVE_FOLDER_ID}
google.drive.enable-sharing=true
google.drive.application-name=${GOOGLE_DRIVE_APPLICATION_NAME}

# Logging Configuration for Security Debugging
logging.level.com.ehs.elearning.security=DEBUG
logging.level.com.ehs.elearning.controller=DEBUG
logging.level.com.ehs.elearning.service=DEBUG
logging.level.org.springframework.security.web.authentication=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
